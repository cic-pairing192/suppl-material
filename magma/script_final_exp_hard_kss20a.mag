// script to run the decomposition of the final exponentiation hard part
load "final_exp_hard.mag";

// new KSS20a curve
k := 20;
rx, tx, qx, yx, cx, lambrx, lambcx, g2cx, txe, yxe, D, k := get_kss20a_polynomials();
optimal_ate_pairing(k, qx, rx);
//reduced matrix for optimal ate pairing
//[   -2     0     0     0     x    -1     0     0]
//[    x    -1     0     0     0     0     2     0]
assert ((x - qx + 2*qx^6) mod rx) eq 0;
assert ((-2 + x*qx^4 - qx^5) mod rx) eq 0;

exponent, R := exponentiation_hard_part(qx, rx, tx, k);
// it does not reduce the degree of the terms: 11 is Degree(qx)-1.
print_degrees(R);
// report the degree in x of each polynomial R[i][j]
// [ 10  9 10 10 10  9 10 11] max 11 sum 79
// [  9  8 10  9  9  8 11 10] max 11 sum 74
// [  8 10  9  8  8 11 10  9] max 11 sum 73
// [ 10  9  8  7 11 10  9  8] max 11 sum 72
// [  9 10  7 11 10 10  8 10] max 11 sum 75
// [ 10  9 11 10 10  9 10  9] max 11 sum 78
// [  9 11 10  9  9  8  9 10] max 11 sum 75
// [ 11 10  9  8  8  7 10  9] max 11 sum 72

print_monomials(R);
// count the number of non-zero coefficients (q^i*x^j)
// row 5 has the smallest number of non-zero coefficients and is a good candidate for the algorithm of Dominguez-Perez.
// [ 10 10  8  8  8  8 10 11] total non-zero coeffs  73
// [ 10  9  8  8  8  8 11 10] total non-zero coeffs  72
// [  9 11  8  8  8 10 10 10] total non-zero coeffs  74
// [ 11  9  8  7 10  8 10  9] total non-zero coeffs  72
// [  9 10  7  9  8  8  9 11] total non-zero coeffs  71
// [ 10 10  9  8  8  8 11  9] total non-zero coeffs  73
// [ 10 12  8  8  8  8  9 10] total non-zero coeffs  73
// [ 12 10  8  8  8  7 10 10] total non-zero coeffs  73

Phi_k := CyclotomicPolynomial(k);
Tx := tx-1;
h2x := Evaluate(Phi_k, Tx) div rx;
exponent_x := (qx^8 - qx^6 + qx^4 - qx^2 + 1) div rx;
assert exponent_x eq (Evaluate(Phi_k, qx) div rx);
assert exponent_x eq exponent;
assert ((exponent_x - h2x) mod cx) eq 0;
e0x := ((exponent_x - h2x) div cx);
assert (e0x mod (qx + tx - 1)) eq 0;
e0x := e0x div (qx + tx - 1);
exponent_x eq (qx + tx - 1)*cx*e0x + h2x;
// h2x and e0x have very large coefficients

L, Lx, L_uq := final_exp_hard_HHT(k, rx, tx, qx);
Factorization(L_uq);
// it does not work nicely

// Phi_k eq (x^8 - x^6 + x^4 - x^2 + 1);
// it means qx^8 - qx^6 + qx^4 - qx^2 + 1 = 0 in the cyclotomic subgroup
// then qx^8 = qx^6 - qx^4 + qx^2 - 1 in the cyclotomic subgroup

exponent_x := exponent_x * 6724; // to remove the denominators, 6724 = 4*41^2
// 1st solution, a naive base-p expension
C := [ QQx ! 0 : i in [1..EulerPhi(k)]];
rem := exponent_x;
for i := EulerPhi(k) to 1 by -1 do
    C[i], rem := Quotrem(rem, qx^(i-1));
end for;
C;
for i := 1 to EulerPhi(k) do
    printf "c%o eq ", i-1; pretty_print_poly(C[i]: with_sign:=false); printf ";\n";
end for;
printf "\n";
c0 := C[1]; c1 := C[2]; c2 := C[3]; c3 := C[4]; c4 := C[5]; c5 := C[6]; c6 := C[7]; c7 := C[8];

c0 eq  -7*x^11 +  14*x^10 -  35*x^9 + 250*x^8 - 1500*x^7 + 3968*x^6 -  8732*x^5 +  3590*x^4 +  4375*x^3 +  55750*x^2 - 271125*x + 188184;
c1 eq  44*x^11 - 143*x^10 + 330*x^9 - 275*x^8 +  500*x^7 +  344*x^6 + 12564*x^5 -  7960*x^4 -  8400*x^3 +  34375*x^2 +  95250*x + 360147;
c2 eq  -8*x^11 +  76*x^10 - 235*x^9 + 200*x^8 + 1125*x^7 - 5358*x^6 + 12152*x^5 -  8930*x^4 + 12725*x^3 -  90500*x^2 + 271125*x - 558004;
c3 eq -44*x^11 + 168*x^10 - 480*x^9 + 725*x^8 - 1250*x^7 +  281*x^6 - 13664*x^5 + 22760*x^4 - 44200*x^3 +  39625*x^2 - 122750*x - 360147;
c4 eq   8*x^11 -  76*x^10 + 360*x^9 - 950*x^8 + 1125*x^7 + 1608*x^6 -  9027*x^5 + 13680*x^4 -   225*x^3 +  12000*x^2 - 208625*x + 676754;
c5 eq  20*x^11 - 120*x^10 + 360*x^9 - 600*x^8 +  500*x^7 +  145*x^6 +  5690*x^5 - 28755*x^4 +  59200*x^3 - 88625*x^2 + 153750*x - 195365;
c6 eq             50*x^10 - 300*x^9 + 900*x^8 - 1500*x^7 + 1250*x^6 +  2925*x^5 -  1150*x^4 -  12950*x^3 -  5750*x^2 +  73125*x;
c7 eq                                                                              5125*x^4 -  30750*x^3 + 92250*x^2 - 153750*x + 128125;
// where
c5 eq    5*(4*x^11 -  24*x^10 +  72*x^9 - 120*x^8 +  100*x^7 +   29*x^6 +  1138*x^5 -  5751*x^4 + 11840*x^3 - 17725*x^2 +  30750*x - 39073);
c6 eq   25*(           2*x^10 -  12*x^9 +  36*x^8 -   60*x^7 +   50*x^6 +   117*x^5 -    46*x^4 -   518*x^3 -   230*x^2 +   2925*x);
c7 eq 5125*(                                                                                x^4 -     6*x^3 +    18*x^2 -     30*x +    25);
// it is not very nice because there are large coefficients.
6724*exponent eq c7*qx^7 + c6*qx^6 + c5*qx^5 + c4*qx^4 + c3*qx^3 + c2*qx^2 + c1*qx + c0;

// try to factor by c7 which is a multiple of cx
assert cx eq 125/164*(x^2 - 2*x + 5)*(x^2 - 4*x + 5);
cc := x^4 - 6*x^3 + 18*x^2 - 30*x + 25;
assert c7 eq 5125*cc;

i := 0;
for ci in C do
    qi, ri := Quotrem(ci, cc);
    printf "c%o eq (", i; pretty_print_poly(qi: with_sign:=true); printf ")*cc + ("; pretty_print_poly(ri: with_sign:=true); printf ");\n";
    i := i+1;
end for;

c0 eq -     (7*x^7 +  28*x^6 +  77*x^5 -  82*x^4 + 287*x^3 +  840*x^2 +  4221*x + 17276)*cc -   164*(252*x^3 - 1592*x^2 + 4170*x - 3781);
c1 eq      (44*x^7 + 121*x^6 + 264*x^5 + 451*x^4 + 984*x^3 + 3025*x^2 + 19932*x + 75427)*cc +   328*(462*x^3 - 2442*x^2 + 5670*x - 4651);
c2 eq -     (8*x^7 -  28*x^6 -  77*x^5 +  82*x^4 - 287*x^3 +  550*x^2 +   699*x -  7436)*cc +   328*(141*x^3 -  706*x^2 + 1560*x - 2268);
c3 eq -    (44*x^7 +  96*x^6 + 264*x^5 + 451*x^4 + 984*x^3 + 3025*x^2 + 21032*x + 67227)*cc -   328*(412*x^3 - 2117*x^2 + 4920*x - 4026);
c4 eq      ( 8*x^7 -  28*x^6 +  48*x^5 +  82*x^4 - 287*x^3 +  550*x^2 +   699*x -  2686)*cc -   328*( 16*x^3 -  206*x^2 +  935*x - 2268);
c5 eq    5*( 4*x^7                                         +   29*x^2 +  1312*x +  1599)*cc -  1640*(  4*x^3 +   24*x^2 -  140*x +  241);
c6 eq   25*(           2*x^6                                          +   117*x +   656)*cc + 16400*(  2*x^3 -   13*x^2 +   30*x -   25);
c7 eq 5125*cc + 0;
5125 eq 5^3 * 41;
// note that x = 1715, 1815 mod 2050; that is x is always a multiple of 5
2050 eq 2 * 5^2 * 41;
164 eq 4*41;

6724*exponent eq cc * (41*125*qx^7 + 25*(2*x^6 + 117*x + 656)*qx^6 + 5*(4*x^7 + 29*x^2 + 1312*x + 1599)*qx^5 + (8*x^7 - 28*x^6 + 48*x^5 + 82*x^4 - 287*x^3 + 550*x^2 + 699*x - 2686)*qx^4 - (44*x^7 +  96*x^6 + 264*x^5 + 451*x^4 + 984*x^3 + 3025*x^2 + 21032*x + 67227)*qx^3 - (8*x^7 -  28*x^6 -  77*x^5 +  82*x^4 - 287*x^3 +  550*x^2 +   699*x -  7436)*qx^2 + (44*x^7 + 121*x^6 + 264*x^5 + 451*x^4 + 984*x^3 + 3025*x^2 + 19932*x + 75427)*qx - (7*x^7 +  28*x^6 +  77*x^5 -  82*x^4 + 287*x^3 +  840*x^2 +  4221*x + 17276)) + 164*( 25*4*(2*x^3 - 13*x^2 + 30*x - 25)*qx^6 + 5*2*(-4*x^3 - 24*x^2 + 140*x - 241)*qx^5 + 2*(-16*x^3 + 206*x^2 - 935*x + 2268)*qx^4 + 2*(-412*x^3 + 2117*x^2 - 4920*x + 4026)*qx^3 + 2*(141*x^3 - 706*x^2 + 1560*x - 2268)*qx^2 + 2*(462*x^3 - 2442*x^2 + 5670*x - 4651)*qx + (-252*x^3 + 1592*x^2 - 4170*x + 3781));


// now, write the rows of the matrix reduced by LLL
phi_k := EulerPhi(k);
for n := 1 to phi_k do
    printf "//row %o\n", n;
    for i := 1 to phi_k do
	printf "c%o eq ", i-1; pretty_print_poly(R[n][i]); printf ";\n";
    end for;
    printf "\n";
end for;


//row 1 is the one with smallest coefficients of the x^10 and x^11 terms, here are the parameters:
l := 1;
c0 := R[l][1]; c1 := R[l][2]; c2 := R[l][3]; c3 := R[l][4]; c4 := R[l][5]; c5 := R[l][6]; c6 := R[l][7]; c7 := R[l][8];

c0 eq         -x^10 + 2*x^9 +  6*x^8 - 22*x^7 + 55*x^6 - 120*x^5 -  88*x^4 -  100*x^3 + 2608*x^2 + 2500*x;
c1 eq                 3*x^9 -  6*x^8 + 22*x^7 - 14*x^6 +  35*x^5 -  50*x^4 + 1084*x^3 + 1000*x^2 -  204*x +  6250;
c2 eq          x^10 - 2*x^9 +  5*x^8          - 41*x^6 + 202*x^5 - 117*x^4 +  600*x^3                     - 13448;
c3 eq        2*x^10 - 7*x^9 + 16*x^8 - 15*x^7          +  35*x^5 + 636*x^4 -  909*x^3 +  250*x^2;
c4 eq         -x^10 + 6*x^9 - 13*x^8 + 20*x^7          - 120*x^5 + 187*x^4 +  162*x^3 + 1375*x^2;
c5 eq                 3*x^9 -  8*x^8 + 19*x^7 - 10*x^6           -  50*x^4 + 1459*x^3 - 1656*x^2 + 1875*x;
c6 eq          x^10 - 2*x^9 +  5*x^8 - 24*x^7 + 48*x^6           +  88*x^4 +  600*x^3 -  625*x^2 - 6622*x -  3125;
c7 eq x^11 - 2*x^10 + 2*x^9 +  6*x^8 - 15*x^7 + 38*x^6 + 252*x^5 + 240*x^4 - 1084*x^3 +  250*x^2          +  6724;

ee := (c0 + c1*qx + c2*qx^2 + c3*qx^3 + c4*qx^4 + c5*qx^5 + c6*qx^6 + c7*qx^7);
assert (ee mod exponent_x) eq 0;
pretty_println_poly(ee div exponent_x);
//sx := 164/125*(x^7 + 4*x^6 + 8*x^5 + 12*x^4 + 8*x^3 + 10*x^2);
sx := 1/5125*(x^7 + 4*x^6 + 8*x^5 + 12*x^4 + 8*x^3 + 10*x^2); // 5125 = 125 * 41
assert ((sx * exponent_x) eq ee);

//  3125 = 5^5 = 0xC35
//  6250 = 2*5^5
//  6724 = 2^2 * 41^2
// 13448 = 2^3 * 41^2

// make a big multi-exponentiation maybe? looking at the data in columns (for increasing powering of x) one  has the following:
i := 0; printf "a%o eq %o + %o*qx + %o*qx^2 + %o*qx^3 + %o*qx^4 + %o*qx^5 + %o*qx^6 + %o*qx^7;\n", i, Coefficient(c0, i), Coefficient(c1, i), Coefficient(c2, i), Coefficient(c3, i), Coefficient(c4, i), Coefficient(c5, i), Coefficient(c6, i), Coefficient(c7, i);
a0 := Coefficient(c0, i) + Coefficient(c1, i)*qx + Coefficient(c2, i)*qx^2 + Coefficient(c3, i)*qx^3 + Coefficient(c4, i)*qx^4 + Coefficient(c5, i)*qx^5 + Coefficient(c6, i)*qx^6 + Coefficient(c7, i)*qx^7;
i := 1; printf "a%o eq %o + %o*qx + %o*qx^2 + %o*qx^3 + %o*qx^4 + %o*qx^5 + %o*qx^6 + %o*qx^7;\n", i, Coefficient(c0, i), Coefficient(c1, i), Coefficient(c2, i), Coefficient(c3, i), Coefficient(c4, i), Coefficient(c5, i), Coefficient(c6, i), Coefficient(c7, i);
a1 := Coefficient(c0, i) + Coefficient(c1, i)*qx + Coefficient(c2, i)*qx^2 + Coefficient(c3, i)*qx^3 + Coefficient(c4, i)*qx^4 + Coefficient(c5, i)*qx^5 + Coefficient(c6, i)*qx^6 + Coefficient(c7, i)*qx^7;
i := 2; printf "a%o eq %o + %o*qx + %o*qx^2 + %o*qx^3 + %o*qx^4 + %o*qx^5 + %o*qx^6 + %o*qx^7;\n", i, Coefficient(c0, i), Coefficient(c1, i), Coefficient(c2, i), Coefficient(c3, i), Coefficient(c4, i), Coefficient(c5, i), Coefficient(c6, i), Coefficient(c7, i);
a2 := Coefficient(c0, i) + Coefficient(c1, i)*qx + Coefficient(c2, i)*qx^2 + Coefficient(c3, i)*qx^3 + Coefficient(c4, i)*qx^4 + Coefficient(c5, i)*qx^5 + Coefficient(c6, i)*qx^6 + Coefficient(c7, i)*qx^7;
i := 3; printf "a%o eq %o + %o*qx + %o*qx^2 + %o*qx^3 + %o*qx^4 + %o*qx^5 + %o*qx^6 + %o*qx^7;\n", i, Coefficient(c0, i), Coefficient(c1, i), Coefficient(c2, i), Coefficient(c3, i), Coefficient(c4, i), Coefficient(c5, i), Coefficient(c6, i), Coefficient(c7, i);
a3 := Coefficient(c0, i) + Coefficient(c1, i)*qx + Coefficient(c2, i)*qx^2 + Coefficient(c3, i)*qx^3 + Coefficient(c4, i)*qx^4 + Coefficient(c5, i)*qx^5 + Coefficient(c6, i)*qx^6 + Coefficient(c7, i)*qx^7;
i := 4; printf "a%o eq %o + %o*qx + %o*qx^2 + %o*qx^3 + %o*qx^4 + %o*qx^5 + %o*qx^6 + %o*qx^7;\n", i, Coefficient(c0, i), Coefficient(c1, i), Coefficient(c2, i), Coefficient(c3, i), Coefficient(c4, i), Coefficient(c5, i), Coefficient(c6, i), Coefficient(c7, i);
a4 := Coefficient(c0, i) + Coefficient(c1, i)*qx + Coefficient(c2, i)*qx^2 + Coefficient(c3, i)*qx^3 + Coefficient(c4, i)*qx^4 + Coefficient(c5, i)*qx^5 + Coefficient(c6, i)*qx^6 + Coefficient(c7, i)*qx^7;
i := 5; printf "a%o eq %o + %o*qx + %o*qx^2 + %o*qx^3 + %o*qx^4 + %o*qx^5 + %o*qx^6 + %o*qx^7;\n", i, Coefficient(c0, i), Coefficient(c1, i), Coefficient(c2, i), Coefficient(c3, i), Coefficient(c4, i), Coefficient(c5, i), Coefficient(c6, i), Coefficient(c7, i);
a5 := Coefficient(c0, i) + Coefficient(c1, i)*qx + Coefficient(c2, i)*qx^2 + Coefficient(c3, i)*qx^3 + Coefficient(c4, i)*qx^4 + Coefficient(c5, i)*qx^5 + Coefficient(c6, i)*qx^6 + Coefficient(c7, i)*qx^7;
i := 6; printf "a%o eq %o + %o*qx + %o*qx^2 + %o*qx^3 + %o*qx^4 + %o*qx^5 + %o*qx^6 + %o*qx^7;\n", i, Coefficient(c0, i), Coefficient(c1, i), Coefficient(c2, i), Coefficient(c3, i), Coefficient(c4, i), Coefficient(c5, i), Coefficient(c6, i), Coefficient(c7, i);
a6 := Coefficient(c0, i) + Coefficient(c1, i)*qx + Coefficient(c2, i)*qx^2 + Coefficient(c3, i)*qx^3 + Coefficient(c4, i)*qx^4 + Coefficient(c5, i)*qx^5 + Coefficient(c6, i)*qx^6 + Coefficient(c7, i)*qx^7;
i := 7; printf "a%o eq %o + %o*qx + %o*qx^2 + %o*qx^3 + %o*qx^4 + %o*qx^5 + %o*qx^6 + %o*qx^7;\n", i, Coefficient(c0, i), Coefficient(c1, i), Coefficient(c2, i), Coefficient(c3, i), Coefficient(c4, i), Coefficient(c5, i), Coefficient(c6, i), Coefficient(c7, i);
a7 := Coefficient(c0, i) + Coefficient(c1, i)*qx + Coefficient(c2, i)*qx^2 + Coefficient(c3, i)*qx^3 + Coefficient(c4, i)*qx^4 + Coefficient(c5, i)*qx^5 + Coefficient(c6, i)*qx^6 + Coefficient(c7, i)*qx^7;
i := 8; printf "a%o eq %o + %o*qx + %o*qx^2 + %o*qx^3 + %o*qx^4 + %o*qx^5 + %o*qx^6 + %o*qx^7;\n", i, Coefficient(c0, i), Coefficient(c1, i), Coefficient(c2, i), Coefficient(c3, i), Coefficient(c4, i), Coefficient(c5, i), Coefficient(c6, i), Coefficient(c7, i);
a8 := Coefficient(c0, i) + Coefficient(c1, i)*qx + Coefficient(c2, i)*qx^2 + Coefficient(c3, i)*qx^3 + Coefficient(c4, i)*qx^4 + Coefficient(c5, i)*qx^5 + Coefficient(c6, i)*qx^6 + Coefficient(c7, i)*qx^7;
i := 9; printf "a%o eq %o + %o*qx + %o*qx^2 + %o*qx^3 + %o*qx^4 + %o*qx^5 + %o*qx^6 + %o*qx^7;\n", i, Coefficient(c0, i), Coefficient(c1, i), Coefficient(c2, i), Coefficient(c3, i), Coefficient(c4, i), Coefficient(c5, i), Coefficient(c6, i), Coefficient(c7, i);
a9 := Coefficient(c0, i) + Coefficient(c1, i)*qx + Coefficient(c2, i)*qx^2 + Coefficient(c3, i)*qx^3 + Coefficient(c4, i)*qx^4 + Coefficient(c5, i)*qx^5 + Coefficient(c6, i)*qx^6 + Coefficient(c7, i)*qx^7;
i := 10; printf "a%o eq %o + %o*qx + %o*qx^2 + %o*qx^3 + %o*qx^4 + %o*qx^5 + %o*qx^6 + %o*qx^7;\n", i, Coefficient(c0, i), Coefficient(c1, i), Coefficient(c2, i), Coefficient(c3, i), Coefficient(c4, i), Coefficient(c5, i), Coefficient(c6, i), Coefficient(c7, i);
a10 := Coefficient(c0, i) + Coefficient(c1, i)*qx + Coefficient(c2, i)*qx^2 + Coefficient(c3, i)*qx^3 + Coefficient(c4, i)*qx^4 + Coefficient(c5, i)*qx^5 + Coefficient(c6, i)*qx^6 + Coefficient(c7, i)*qx^7;
i := 11; printf "a%o eq %o + %o*qx + %o*qx^2 + %o*qx^3 + %o*qx^4 + %o*qx^5 + %o*qx^6 + %o*qx^7;\n", i, Coefficient(c0, i), Coefficient(c1, i), Coefficient(c2, i), Coefficient(c3, i), Coefficient(c4, i), Coefficient(c5, i), Coefficient(c6, i), Coefficient(c7, i);
a11 := Coefficient(c0, i) + Coefficient(c1, i)*qx + Coefficient(c2, i)*qx^2 + Coefficient(c3, i)*qx^3 + Coefficient(c4, i)*qx^4 + Coefficient(c5, i)*qx^5 + Coefficient(c6, i)*qx^6 + Coefficient(c7, i)*qx^7;

ee eq (a0 + a1*x + a2*x^2 + a3*x^3 + a4*x^4 + a5*x^5 + a6*x^6 + a7*x^7 + a8*x^8 + a9*x^9 + a10*x^10 + a11*x^11);

a0 eq 6250*qx - 13448*qx^2 - 3125*qx^6 + 6724*qx^7;
a1 eq 2500 - 204*qx + 1875*qx^5 - 6622*qx^6;
a2 eq 2608 + 1000*qx + 250*qx^3 + 1375*qx^4 - 1656*qx^5 - 625*qx^6 + 250*qx^7;
a3 eq -100 + 1084*qx + 600*qx^2 - 909*qx^3 + 162*qx^4 + 1459*qx^5 + 600*qx^6 - 1084*qx^7;
a4 eq - 88 - 50*qx - 117*qx^2 + 636*qx^3 + 187*qx^4 - 50*qx^5 + 88*qx^6 + 240*qx^7;
a5 eq -120 + 35*qx + 202*qx^2 + 35*qx^3 - 120*qx^4 + 252*qx^7;
a6 eq 55 - 14*qx - 41*qx^2 - 10*qx^5 + 48*qx^6 + 38*qx^7;
a7 eq -22 + 22*qx - 15*qx^3 + 20*qx^4 + 19*qx^5 - 24*qx^6 - 15*qx^7;
a8 eq 6 - 6*qx + 5*qx^2 + 16*qx^3 - 13*qx^4 - 8*qx^5 + 5*qx^6 + 6*qx^7;
a9 eq 2 + 3*qx - 2*qx^2 - 7*qx^3 + 6*qx^4 + 3*qx^5 - 2*qx^6 + 2*qx^7;
a10 eq -1 + qx^2 + 2*qx^3 - qx^4 + qx^6 - 2*qx^7;
a11 eq qx^7;

// it would be a very tedious work to write an optimized exponentation from that.
// 2500 = 2^2 * 5^4
// 204 = 2^2 * 3 * 17
// 1875 = 3 * 5^4
// 6622 = 2 * 7 * 11 * 43

// we have (qx^8 - qx^6 + qx^4 - qx^2 + 1) = 0 at this stage. Hence qx^8 = qx^6 - qx^4 + qx^2 - 1
// is there a common pattern with the c_i of even index, and the c_i of odd index? not really except for x^10.

l := 1;
c0 := R[l][1]; c1 := R[l][2]; c2 := R[l][3]; c3 := R[l][4]; c4 := R[l][5]; c5 := R[l][6]; c6 := R[l][7]; c7 := R[l][8];
//row 1
ee := (c0 + c1*qx + c2*qx^2 + c3*qx^3 + c4*qx^4 + c5*qx^5 + c6*qx^6 + c7*qx^7);
assert (ee mod exponent_x) eq 0;
sx := ee div exponent_x;
assert sx eq x^2*(x^5 + 4*x^4 + 8*x^3 + 12*x^2 + 8*x + 10)/5125;

c7 eq     x^11 - 2*x^10 + 5*x^9  - 3*(x^9 - 2*x^8 + 5*x^7) + 38*x^6 + 252*x^5 + 240*x^4 - 1084*x^3 +  250*x^2          +  6724;
c5 eq -2*(x^8  - 2*x^7  + 5*x^6) + 3*(x^9 - 2*x^8 + 5*x^7)                    -  50*x^4 + 1459*x^3 - 1656*x^2 + 1875*x;
c3 eq  2*(x^10 - 2*x^9  + 5*x^8) - 3*(x^9 - 2*x^8 + 5*x^7)          +  35*x^5 + 636*x^4 -  909*x^3 +  250*x^2;
c1 eq  7*(x^7  - 2*x^6  + 5*x^5) + 3*(x^9 - 2*x^8 + 5*x^7)                    -  50*x^4 + 1084*x^3 + 1000*x^2 -  204*x +  6250;

c6 eq          x^10 - 2*x^9 +  5*x^8 - 24*x*  (x^6 - 2*x^5 + 5*x^4) + 120*x^5 + 88*x^4 +  600*x^3                      - 625*x^2 - 6622*x -  3125;
c4 eq         -x^10 + 2*x^9 -  5*x^8 +  4*x^3*(x^6 - 2*x^5 + 5*x^4) - 120*x^5 - 88*x^4 -  600*x^3 + 275*x^4 + 762*x^3 + 1375*x^2;
c2 eq          x^10 - 2*x^9 +  5*x^8 - 41*    (x^6 - 2*x^5 + 5*x^4) + 120*x^5 + 88*x^4 +  600*x^3                                         - 13448;
c0 eq         -x^10 + 2*x^9 -  5*x^8 + 11*x^2*(x^6 - 2*x^5 + 5*x^4) - 120*x^5 - 88*x^4 -  600*x^3           + 500*x^3 + 2608*x^2 + 2500*x;
// 162 = 2*3^4 = 2*81

// finally, row 5 that is the one with the less non-zero coefficients
l := 5;
c0 := R[l][1]; c1 := R[l][2]; c2 := R[l][3]; c3 := R[l][4]; c4 := R[l][5]; c5 := R[l][6]; c6 := R[l][7]; c7 := R[l][8];
//row 5
c0 eq                 4*x^9 -  8*x^8 + 20*x^7 - 41*x^6 +  82*x^5 +  70*x^4 + 762*x^3 + 1375*x^2          - 13448;
c1 eq        2*x^10 - 4*x^9 +  8*x^8 +  4*x^7 - 10*x^6 +  35*x^5 + 586*x^4 + 550*x^3 - 1406*x^2 + 1875*x;
c2 eq                                - 24*x^7 + 89*x^6 - 202*x^5 + 205*x^4           -  625*x^2 - 6622*x + 10323;
c3 eq x^11 - 4*x^10 + 9*x^9 - 10*x^8          + 38*x^6 + 217*x^5 - 396*x^4 - 175*x^3                      + 6724;
c4 eq          x^10 - 2*x^9 +  5*x^8 - 41*x^6          + 202*x^5 - 117*x^4 + 600*x^3                     - 13448;
c5 eq        2*x^10 - 7*x^9 + 16*x^8 - 15*x^7 + 35*x^5 + 636*x^4 - 909*x^3           +  250*x^2;
c6 eq                        -11*x^8 + 22*x^7 - 14*x^6 -  82*x^5 + 205*x^4 - 500*x^3 - 2608*x^2 - 2500*x + 13448;
c7 eq       -2*x^10 + 4*x^9 - 10*x^8 -  7*x^7 + 14*x^6 -  70*x^5 - 586*x^4 - 175*x^3 - 1250*x^2 +  204*x -  6250;

//the coefficients involved for an addition-subtraction chain:
for l in [1, 5] do
    list := [];
    for i := 1 to NumberOfColumns(R) do
	coeffs := Eltseq(R[l][i]);
	for j := 1 to # coeffs do
	    if coeffs[j] ne 0 then
		Append(~list, <Abs(coeffs[j]),Sign(coeffs[j]),i-1,j-1>); // it means coeffs[j] * x^(j-1) * q^(i-1)
	    end if;
	end for;
    end for;
    Sort(~list);
    printf "list_row_%o := %o;\n", l, list;
    list_unique := [list[i][1] : i in [1..#list] | i eq 1 or list[i-1][1] ne list[i][1]];
    printf "list_unique_row_%o := %o; // %o items\n\n", l, list_unique, #list_unique;
end for;
list_unique_row_1 := [ 1, 2, 3, 5, 6, 7, 8, 10, 13, 14, 15, 16, 19, 20, 22, 24, 35, 38, 41, 48, 50, 55, 88, 100, 117, 120, 162, 187, 202, 204, 240, 250, 252, 600, 625, 636, 909, 1000, 1084, 1375, 1459, 1656, 1875, 2500, 2608, 3125, 6250, 6622, 6724, 13448 ]; // 50 items
list_unique_row_5 := [ 1, 2, 4, 5, 7, 8, 9, 10, 11, 14, 15, 16, 20, 22, 24, 35, 38, 41, 70, 82, 89, 117, 175, 202, 204, 205, 217, 250, 396, 500, 550, 586, 600, 625, 636, 762, 909, 1250, 1375, 1406, 1875, 2500, 2608, 6250, 6622, 6724, 10323, 13448 ]; // 48 items

// restart again, write the rows

for l := 1 to EulerPhi(k) do
    printf "//row %o\n", l;
    for i := 1 to EulerPhi(k) do
	printf "c%o := ", i-1; pretty_print_poly(R[l][i]); printf ";\n";
    end for;
    printf "\n";
end for;

//row 1
l := 1;
c0 := R[l][1]; c1 := R[l][2]; c2 := R[l][3]; c3 := R[l][4]; c4 := R[l][5]; c5 := R[l][6]; c6 := R[l][7]; c7 := R[l][8];
c0 eq         -x^10 + 2*x^9 +  6*x^8 - 22*x^7 + 55*x^6 - 120*x^5 -  88*x^4 -  100*x^3 + 2608*x^2 + 2500*x;
c1 eq                 3*x^9 -  6*x^8 + 22*x^7 - 14*x^6 +  35*x^5 -  50*x^4 + 1084*x^3 + 1000*x^2 -  204*x +  6250;
c2 eq          x^10 - 2*x^9 +  5*x^8          - 41*x^6 + 202*x^5 - 117*x^4 +  600*x^3                     - 13448;
c3 eq        2*x^10 - 7*x^9 + 16*x^8 - 15*x^7          +  35*x^5 + 636*x^4 -  909*x^3 +  250*x^2;
c4 eq         -x^10 + 6*x^9 - 13*x^8 + 20*x^7          - 120*x^5 + 187*x^4 +  162*x^3 + 1375*x^2;
c5 eq                 3*x^9 -  8*x^8 + 19*x^7 - 10*x^6           -  50*x^4 + 1459*x^3 - 1656*x^2 + 1875*x;
c6 eq          x^10 - 2*x^9 +  5*x^8 - 24*x^7 + 48*x^6           +  88*x^4 +  600*x^3 -  625*x^2 - 6622*x -  3125;
c7 eq x^11 - 2*x^10 + 2*x^9 +  6*x^8 - 15*x^7 + 38*x^6 + 252*x^5 + 240*x^4 - 1084*x^3 +  250*x^2          +  6724;

// 3125 = 5^5 = 0xC35
// 6250 = 2*5^5
// 6724 = 2^2 * 41^2
// 13448 = 2^3*41^2

c0 eq         -x*(x^9 - 2*x^8 + 5*x^7) + 11*x^2*(x^6 - 2*x^5 + 5*x^4)           - 120*x^5 -  88*x^4 -  100*x^3 + 2608*x^2 + 2500*x;
c1 eq          3*(x^9 - 2*x^8 + 5*x^7) +  7*x  *(x^6 - 2*x^5 + 5*x^4)                     -  50*x^4 + 1084*x^3 + 1000*x^2 -  204*x +  6250;
c2 eq          x*(x^9 - 2*x^8 + 5*x^7) - 41*    (x^6 - 2*x^5 + 5*x^4)           + 120*x^5 +  88*x^4 +  600*x^3                     - 13448;
c3 eq         -3*(x^9 - 2*x^8 + 5*x^7) +  2*x^4*(x^6 - 2*x^5 + 5*x^4)           +  35*x^5 + 636*x^4 -  909*x^3 +  250*x^2;
c4 eq         -x*(x^9 - 2*x^8 + 5*x^7) +  4*x^3*(x^6 - 2*x^5 + 5*x^4)           - 120*x^5 + 187*x^4 +  162*x^3 + 1375*x^2;
c5 eq          3*(x^9 - 2*x^8 + 5*x^7) -  2*x^2*(x^6 - 2*x^5 + 5*x^4)                     -  50*x^4 + 1459*x^3 - 1656*x^2 + 1875*x;
c6 eq          x*(x^9 - 2*x^8 + 5*x^7) - 24*x  *(x^6 - 2*x^5 + 5*x^4)           + 120*x^5 +  88*x^4 +  600*x^3 -  625*x^2 - 6622*x -  3125;
c7 eq         -3*(x^9 - 2*x^8 + 5*x^7) +    x^5*(x^6 - 2*x^5 + 5*x^4) +  38*x^6 + 252*x^5 + 240*x^4 - 1084*x^3 +  250*x^2          +  6724;

c7 eq         -3*(x^9 - 2*x^8 + 5*x^7) +    x^5*(x^6 - 2*x^5 + 5*x^4) +  38*(x^6 - 2*x^5 + 5*x^4) + 328*x^5 +  50*(x^4 - 2*x^3 + 5*x^2)           - 984*x^3          +  6724;
c5 eq          3*(x^9 - 2*x^8 + 5*x^7) -  2*x^2*(x^6 - 2*x^5 + 5*x^4)                                       -  50*(x^4 - 2*x^3 + 5*x^2)           + 984*x^3 + 375*(x^3 - 2*x^2 + 5*x) - 656*x^2;
c3 eq         -3*(x^9 - 2*x^8 + 5*x^7) +  2*x^4*(x^6 - 2*x^5 + 5*x^4)           +  35*(x^5 - 2*x^4 + 5*x^3) +  50*(x^4 - 2*x^3 + 5*x^2) + 656*x^4 - 984*x^3;
c1 eq          3*(x^9 - 2*x^8 + 5*x^7) +  7*x  *(x^6 - 2*x^5 + 5*x^4)                                       -  50*(x^4 - 2*x^3 + 5*x^2)           + 984*x^3 + 1250*(x^2 - 2*x + 5) + 2296*x;

c6 eq          x*(x^9 - 2*x^8 + 5*x^7) - 24*x  *(x^6 - 2*x^5 + 5*x^4) + 120*(x^5 - 2*x^4 + 5*x^3) + 328*x^4 -  625*(x^2 - 2*x +5) - 24*328*x;
c4 eq         -x*(x^9 - 2*x^8 + 5*x^7) +  4*x^3*(x^6 - 2*x^5 + 5*x^4) - 120*(x^5 - 2*x^4 + 5*x^3) - 328*x^4 +  275*(x^4 -2*x^3 + 5*x^2) + 4*328*x^3;
c2 eq          x*(x^9 - 2*x^8 + 5*x^7) - 41*    (x^6 - 2*x^5 + 5*x^4) + 120*(x^5 - 2*x^4 + 5*x^3) + 328*x^4                     - 41*328;
c0 eq         -x*(x^9 - 2*x^8 + 5*x^7) + 11*x^2*(x^6 - 2*x^5 + 5*x^4) - 120*(x^5 - 2*x^4 + 5*x^3) - 328*x^4 + 500*(x^3 - 2*x^2 + 5*x) + 11*328*x^2;

c7 eq -3*(x^9 - 2*x^8 + 5*x^7 + 328*x^3) +   x^5*(x^6 - 2*x^5 + 5*x^4 + 328) + 50*(x^4 - 2*x^3 + 5*x^2) +   38*(x^6 - 2*x^5 + 5*x^4) + 6724;
c5 eq  3*(x^9 - 2*x^8 + 5*x^7 + 328*x^3) - 2*x^2*(x^6 - 2*x^5 + 5*x^4 + 328) - 50*(x^4 - 2*x^3 + 5*x^2) +  375*(x^3 - 2*x^2 + 5*x);
c3 eq -3*(x^9 - 2*x^8 + 5*x^7 + 328*x^3) + 2*x^4*(x^6 - 2*x^5 + 5*x^4 + 328) + 50*(x^4 - 2*x^3 + 5*x^2) +   35*(x^5 - 2*x^4 + 5*x^3);
c1 eq  3*(x^9 - 2*x^8 + 5*x^7 + 328*x^3) + 7*x  *(x^6 - 2*x^5 + 5*x^4 + 328) - 50*(x^4 - 2*x^3 + 5*x^2) + 1250*(x^2 - 2*x + 5);

c6 eq  x*(x^9 - 2*x^8 + 5*x^7 + 328*x^3) - 24*x  *(x^6 - 2*x^5 + 5*x^4 + 328) + 120*(x^5 - 2*x^4 + 5*x^3) - 625*(x^2 - 2*x +5);
c4 eq -x*(x^9 - 2*x^8 + 5*x^7 + 328*x^3) +  4*x^3*(x^6 - 2*x^5 + 5*x^4 + 328) - 120*(x^5 - 2*x^4 + 5*x^3) + 275*(x^4 -2*x^3 + 5*x^2);
c2 eq  x*(x^9 - 2*x^8 + 5*x^7 + 328*x^3) - 41*    (x^6 - 2*x^5 + 5*x^4 + 328) + 120*(x^5 - 2*x^4 + 5*x^3);
c0 eq -x*(x^9 - 2*x^8 + 5*x^7 + 328*x^3) + 11*x^2*(x^6 - 2*x^5 + 5*x^4 + 328) - 120*(x^5 - 2*x^4 + 5*x^3) + 500*(x^3 - 2*x^2 + 5*x);

ee := (c0 + c1*qx + c2*qx^2 + c3*qx^3 + c4*qx^4 + c5*qx^5 + c6*qx^6 + c7*qx^7);

ee eq (x^6 - 2*x^5 + 5*x^4 + 328)*(x*qx*(x^4*qx^6 - 2*x*qx^4 + 2*x^3*qx^2 + 7) - 24*x*qx^6 + 4*x^3*qx^4 - 41*qx^2 + 11*x^2) \
+ (1 - qx^2 + qx^4 - qx^6)*(x^9 - 2*x^8 + 5*x^7 + 328*x^3)*(3*qx - x) \
+ (1 - qx^2 + qx^4 - qx^6)*(x^4 - 2*x^3 + 5*x^2) * (-50*qx - 120*x) \
+ (x^2 - 2*x + 5) * (500*x + 275*x^2*qx^4 - 625*qx^6 + 1250*qx + 35*x^3*qx^3 + 375*x*qx^5 + 38*x^4*qx^7) \
+ 6724*qx^7;

ee eq                      (x^6 - 2*x^5 + 5*x^4 + 328)*(-41*qx^2 + x*qx*(7 - 24*qx^5) + x^2*(11 - 2*qx^5) + 4*x^3*qx^4 + 2*x^4*qx^3 + x^5*qx^7) \
+ (1 - qx^2 + qx^4 - qx^6)*(x^6 - 2*x^5 + 5*x^4 + 328)*(3*x^3*qx - x^4) \
+                          (x^2 - 2*x + 5) * (qx*625*(2 - qx^5) + 125*x*(4 + 3*qx^5) + 275*x^2*qx^4 + 35*x^3*qx^3 + 38*x^4*qx^7) \
+ (1 - qx^2 + qx^4 - qx^6)*(x^2 - 2*x + 5) * (-50*x^2*qx - 120*x^3) \
+ 6724*qx^7;

// replace qx^6-qx^4+qx^2-1 by qx^8
ee1 := (x^6 - 2*x^5 + 5*x^4 + 328)*(-41*qx^2 + x*qx*(7 - 24*qx^5) + x^2*(11 - 2*qx^5) + 4*x^3*qx^4 + 2*x^4*qx^3 + x^5*qx^7) \
     - (x^6 - 2*x^5 + 5*x^4 + 328)*qx^8*(3*x^3*qx - x^4) \
     + (x^2 - 2*x + 5) * (qx*625*(2 - qx^5) + 125*x*(4 + 3*qx^5) + 275*x^2*qx^4 + 35*x^3*qx^3 + 38*x^4*qx^7) \
     - (x^2 - 2*x + 5) * qx^8*(-50*x^2*qx - 120*x^3) \
+ 6724*qx^7;

ee1 eq (x^6 - 2*x^5 + 5*x^4 + 328)*(-41*qx^2 + x*qx*(7 - 24*qx^5) + x^2*(11 - 2*qx^5) + x^3*qx^4*(4 - 3*qx^5) + x^4*qx^3*(2 + qx^5) + x^5*qx^7) \
     + (x^2 - 2*x + 5) * (625*qx*(2 - qx^5) + 125*x*(4 + 3*qx^5) + 25*x^2*qx^4*(11 + 2*qx^5) + 5*x^3*qx^3*(7 + 24*qx^5) + 38*x^4*qx^7) \
+ 6724*qx^7;
// it is very similar to kss20b, only some signs are flipped.

assert (ee1 mod exponent_x) eq 0;
sx1 := ee1 div (exponent_x/6724);
pretty_println_poly(sx1);
assert sx1 eq -1/861512500*(3*x^29 + 27*x^27 + 48*x^26 + 132*x^25 + 694*x^24 + 2460*x^23 + 8118*x^22 + 21892*x^21 + 57128*x^20 + 147530*x^19 + 422464*x^18 + 1209858*x^17 + 3317032*x^16 + 7930788*x^15 + 15961692*x^14 + 31386156*x^13 + 68674492*x^12 + 153733828*x^11 + 292155352*x^10 + 405499143*x^9 + 250478512*x^8 - 695646185*x^7 - 3588683800*x^6 - 7346919200*x^5 - 11932539050*x^4 - 15038685200*x^3 - 13744450250*x^2
);

//row 2
l := 2;
c0 := R[l][1]; c1 := R[l][2]; c2 := R[l][3]; c3 := R[l][4]; c4 := R[l][5]; c5 := R[l][6]; c6 := R[l][7]; c7 := R[l][8];
c0 eq                 3*x^9 -  6*x^8 + 22*x^7 -  14*x^6 + 35*x^5  -  50*x^4 + 1084*x^3 + 1000*x^2 -  204*x +  6250;
c1 eq                         11*x^8 - 22*x^7 +  14*x^6 + 82*x^5  - 205*x^4 +  500*x^3 + 2608*x^2 + 2500*x - 13448;
c2 eq        2*x^10 - 7*x^9 + 16*x^8 - 15*x^7 +  35*x^5           + 636*x^4 -  909*x^3 +  250*x^2;
c3 eq                 4*x^9 - 19*x^8 + 42*x^7 -  55*x^6           + 275*x^4 +  262*x^3 - 1233*x^2 - 2500*x;
c4 eq                 3*x^9 -  8*x^8 + 19*x^7 -  10*x^6           -  50*x^4 + 1459*x^3 - 1656*x^2 + 1875*x;
c5 eq                         11*x^8 - 46*x^7 + 103*x^6 - 120*x^5           +  500*x^3 + 1983*x^2 - 4122*x -  3125;
c6 eq x^11 - 2*x^10 + 2*x^9 +  6*x^8 - 15*x^7 +  38*x^6 + 252*x^5 + 240*x^4 - 1084*x^3 +  250*x^2          +  6724;
c7 eq          x^10 - 2*x^9 -  6*x^8 + 22*x^7 -  55*x^6 + 120*x^5 +  88*x^4 +  100*x^3 - 2608*x^2 - 2500*x;

for i in [1,3,5,7,2,4,6,8] do
    ci := R[l][i];
    q1, r1 := Quotrem(ci, x^6 - 2*x^5 + 5*x^4 + 328);
    q2, r2 := Quotrem(r1, x^2 - 2*x + 5);
    v5 := Valuation(Gcd([ZZ ! ci : ci in Eltseq(q2)]), 5);
    if r2 eq 0 then
	printf "c%o eq (x^6 - 2*x^5 + 5*x^4 + 328) * (%16o) + (x^2 - 2*x + 5) * 5^%o*(%o);\n", i-1, q1, v5, q2/(5^v5);
    else
	printf "c%o eq (x^6 - 2*x^5 + 5*x^4 + 328) * (%16o) + (x^2 - 2*x + 5) * 5^%o*(%o) + %o;\n", i-1, q1, v5, q2/(5^v5), r2;
    end if;
end for;

c0 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (     3*x^3 + 7*x) + (x^2 - 2*x + 5) * 5^2*(-2*x^2 + 50);
c2 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (   2*x^4 - 3*x^3) + (x^2 - 2*x + 5) * 5^1*(7*x^3 + 10*x^2);
c4 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (   3*x^3 - 2*x^2) + (x^2 - 2*x + 5) * 5^2*(-2*x^2 + 15*x);
c6 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (x^5 - 3*x^3 + 38) + (x^2 - 2*x + 5) * 5^2*(2*x^2) + -5740;
c1 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (     11*x^2 - 41) + (x^2 - 2*x + 5) * 5^3*(4*x);
c3 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (  4*x^3 - 11*x^2) + (x^2 - 2*x + 5) * 5^2*(11*x^2 - 20*x);
c5 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (   11*x^2 - 24*x) + (x^2 - 2*x + 5) * 5^3*(4*x - 5);
c7 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (    x^4 - 11*x^2) + (x^2 - 2*x + 5) * 5^1*(24*x^3 - 100*x);

c0 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (        3*x^3 + 7*x  ) + (x^2 - 2*x + 5) * (       - 50*x^2 + 1250);
c2 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (2*x^4 - 3*x^3        ) + (x^2 - 2*x + 5) * (35*x^3 + 50*x^2);
c4 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (        3*x^3 - 2*x^2) + (x^2 - 2*x + 5) * (       - 50*x^2 + 375*x);
c6 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (  x^5 - 3*x^3 + 38   ) + (x^2 - 2*x + 5) * (         50*x^2) + -5740;

c1 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (        11*x^2 - 41  ) + (x^2 - 2*x + 5) * (          500*x);
c3 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (4*x^3 - 11*x^2       ) + (x^2 - 2*x + 5) * (275*x^2 - 500*x);
c5 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (        11*x^2 - 24*x) + (x^2 - 2*x + 5) * (          500*x - 625);
c7 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (  x^4 - 11*x^2       ) + (x^2 - 2*x + 5) * (120*x^3 - 500*x);

//row 3
l := 3;
c0 := R[l][1]; c1 := R[l][2]; c2 := R[l][3]; c3 := R[l][4]; c4 := R[l][5]; c5 := R[l][6]; c6 := R[l][7]; c7 := R[l][8];
c0 eq                         11*x^8 - 22*x^7 +  14*x^6 +  82*x^5 - 205*x^4 +  500*x^3 + 2608*x^2 + 2500*x - 13448;
c1 eq        2*x^10 - 4*x^9 + 10*x^8 +  7*x^7 -  14*x^6 +  70*x^5 + 586*x^4 +  175*x^3 + 1250*x^2 -  204*x +  6250;
c2 eq                 4*x^9 - 19*x^8 + 42*x^7 -  55*x^6           + 275*x^4 +  262*x^3 - 1233*x^2 - 2500*x;
c3 eq                         -2*x^8 -  3*x^7 +   4*x^6 -  35*x^5           +  375*x^3 - 2656*x^2 + 2079*x -  6250;
c4 eq                         11*x^8 - 46*x^7 + 103*x^6 - 120*x^5           +  500*x^3 + 1983*x^2 - 4122*x -  3125;
c5 eq x^11 - 2*x^10 + 5*x^9 +  7*x^7 + 24*x^6           + 287*x^5 + 190*x^4            + 1250*x^2 -  204*x + 12974;
c6 eq          x^10 - 2*x^9 -  6*x^8 + 22*x^7 -  55*x^6 + 120*x^5 +  88*x^4 +  100*x^3 - 2608*x^2 - 2500*x;
c7 eq                -3*x^9 +  6*x^8 - 22*x^7 +  14*x^6 -  35*x^5 +  50*x^4 - 1084*x^3 - 1000*x^2 +  204*x -  6250;

for i in [1,3,5,7,2,4,6,8] do
    ci := R[l][i];
    q1, r1 := Quotrem(ci, x^6 - 2*x^5 + 5*x^4 + 328);
    q2, r2 := Quotrem(r1, x^2 - 2*x + 5);
    if r2 eq 0 then
	printf "c%o eq (x^6 - 2*x^5 + 5*x^4 + 328) * (%16o) + (x^2 - 2*x + 5) * (%o);\n", i-1, q1, q2;
    else
	printf "c%o eq (x^6 - 2*x^5 + 5*x^4 + 328) * (%16o) + (x^2 - 2*x + 5) * (%o) + %o;\n", i-1, q1, q2, r2;
    end if;
end for;

c0 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (     11*x^2 - 41) + (x^2 - 2*x + 5) * (500*x);
c2 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (  4*x^3 - 11*x^2) + (x^2 - 2*x + 5) * (275*x^2 - 500*x);
c4 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (   11*x^2 - 24*x) + (x^2 - 2*x + 5) * (500*x - 625);
c6 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (    x^4 - 11*x^2) + (x^2 - 2*x + 5) * (120*x^3 - 500*x);
c1 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (     2*x^4 + 7*x) + (x^2 - 2*x + 5) * (35*x^3 + 1250);
c3 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (    -2*x^2 - 7*x) + (x^2 - 2*x + 5) * (375*x - 1250);
c5 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (  x^5 + 7*x + 38) + (x^2 - 2*x + 5) * (1250) + -5740;
c7 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (    -3*x^3 - 7*x) + (x^2 - 2*x + 5) * (50*x^2 - 1250);

c0 eq (x^6 - 2*x^5 + 5*x^4 + 328) * ( 11*x^2 - 41   ) + (x^2 - 2*x + 5) * ( 500*x          );
c2 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (-11*x^2 + 4*x^3) + (x^2 - 2*x + 5) * (-500*x + 275*x^2);
c4 eq (x^6 - 2*x^5 + 5*x^4 + 328) * ( 11*x^2 - 24*x ) + (x^2 - 2*x + 5) * ( 500*x - 625    );
c6 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (-11*x^2 + x^4  ) + (x^2 - 2*x + 5) * (-500*x + 120*x^3);
c1 eq (x^6 - 2*x^5 + 5*x^4 + 328) * ( 7*x + 2*x^4   ) + (x^2 - 2*x + 5) * ( 1250 + 35*x^3);
c3 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (-7*x - 2*x^2   ) + (x^2 - 2*x + 5) * (-1250 + 375*x );
c5 eq (x^6 - 2*x^5 + 5*x^4 + 328) * ( 7*x + x^5 + 38) + (x^2 - 2*x + 5) * ( 1250         ) - 5740;
c7 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (-7*x - 3*x^3   ) + (x^2 - 2*x + 5) * (-1250 + 50*x^2);

//row 4
l := 4;
c0 := R[l][1]; c1 := R[l][2]; c2 := R[l][3]; c3 := R[l][4]; c4 := R[l][5]; c5 := R[l][6]; c6 := R[l][7]; c7 := R[l][8];
c0 eq        2*x^10 - 4*x^9 + 10*x^8 +  7*x^7 - 14*x^6 +  70*x^5 + 586*x^4 +  175*x^3 + 1250*x^2  - 204*x +  6250;
c1 eq                 4*x^9 -  8*x^8 + 20*x^7 - 41*x^6 +  82*x^5 +  70*x^4 +  762*x^3 + 1375*x^2          - 13448;
c2 eq                       -  2*x^8 -  3*x^7 +  4*x^6 -  35*x^5           +  375*x^3 - 2656*x^2 + 2079*x -  6250;
c3 eq                                - 24*x^7 + 89*x^6 - 202*x^5 + 205*x^4            -  625*x^2 - 6622*x + 10323;
c4 eq x^11 - 2*x^10 + 5*x^9          +  7*x^7 + 24*x^6 + 287*x^5 + 190*x^4            + 1250*x^2 -  204*x + 12974;
c5 eq          x^10 - 2*x^9 +  5*x^8          - 41*x^6 + 202*x^5 - 117*x^4 +  600*x^3                     - 13448;
c6 eq                -3*x^9 +  6*x^8 - 22*x^7 + 14*x^6 -  35*x^5 +  50*x^4 - 1084*x^3 - 1000*x^2 +  204*x -  6250;
c7 eq                       - 11*x^8 + 22*x^7 - 14*x^6 -  82*x^5 + 205*x^4 -  500*x^3 - 2608*x^2 - 2500*x + 13448;

for i in [1,3,5,7,2,4,6,8] do
    ci := R[l][i];
    q1, r1 := Quotrem(ci, x^6 - 2*x^5 + 5*x^4 + 328);
    q2, r2 := Quotrem(r1, x^2 - 2*x + 5);
    if r2 eq 0 then
	printf "c%o eq (x^6 - 2*x^5 + 5*x^4 + 328) * (%16o) + (x^2 - 2*x + 5) * (%o);\n", i-1, q1, q2;
    else
	printf "c%o eq (x^6 - 2*x^5 + 5*x^4 + 328) * (%16o) + (x^2 - 2*x + 5) * (%o) + %o;\n", i-1, q1, q2, r2;
    end if;
end for;

c0 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (   2*x^4 + 7*x) + (x^2 - 2*x + 5) * (35*x^3 + 1250);
c2 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (  -2*x^2 - 7*x) + (x^2 - 2*x + 5) * (375*x  - 1250);
c4 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (x^5 + 38 + 7*x) + (x^2 - 2*x + 5) * (         1250) - 5740;
c6 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (  -3*x^3 - 7*x) + (x^2 - 2*x + 5) * (50*x^2 - 1250);
c1 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (    4*x^3 - 41) + (x^2 - 2*x + 5) * ( 275*x^2);
c3 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (    -24*x + 41) + (x^2 - 2*x + 5) * (-625    );
c5 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (      x^4 - 41) + (x^2 - 2*x + 5) * ( 120*x^3);
c7 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (  -11*x^2 + 41) + (x^2 - 2*x + 5) * (-500*x  );

ee := (c0 + c1*qx + c2*qx^2 + c3*qx^3 + c4*qx^4 + c5*qx^5 + c6*qx^6 + c7*qx^7);
qx8 := qx^6 - qx^4 + qx^2 - 1;

ee eq (x^6 - 2*x^5 + 5*x^4 + 328) * (x^5*qx^4 + x^4*(2 + qx^5) + x^3*qx*(-3*qx^5 + 4) + x^2*qx^2*(-2 - 11*qx^5) + x*(-7*qx8 - 24*qx^3) + 38*qx^4 + 41*qx*qx8) \
+ (x^2 - 2*x + 5) * (x^3*5*(7 + 24*qx^5) + x^2*25*qx*(2*qx^5 + 11) + x*qx^2*125*(3 - 4*qx^5) - 1250*qx8 - 625*qx^3) - 5740*qx^4;

assert 5740 eq 2^12 + 2^10+2^9 + 2^6+2^5 + 2^3+2^2; // 0x166C 1011001101100
assert 5740 eq 2^12 + 2^10+2^9 + 2^6+2^5 + 2^4 - 2^2;
assert 5740 eq 2^12 + 2^10+2^9 + 2^7-2^4 - 2^2; // 10110100(-1)0(-1)00

328 eq 2^8 + 2^6 + 2^3 ; //0x148 101001000
//row 5
l := 5;
c0 := R[l][1]; c1 := R[l][2]; c2 := R[l][3]; c3 := R[l][4]; c4 := R[l][5]; c5 := R[l][6]; c6 := R[l][7]; c7 := R[l][8];
c0 eq                 4*x^9 -  8*x^8 + 20*x^7 - 41*x^6 +  82*x^5 +  70*x^4 + 762*x^3 + 1375*x^2          - 13448;
c1 eq        2*x^10 - 4*x^9 +  8*x^8 +  4*x^7 - 10*x^6 +  35*x^5 + 586*x^4 + 550*x^3 - 1406*x^2 + 1875*x;
c2 eq                                - 24*x^7 + 89*x^6 - 202*x^5 + 205*x^4           -  625*x^2 - 6622*x + 10323;
c3 eq x^11 - 4*x^10 + 9*x^9 - 10*x^8          + 38*x^6 + 217*x^5 - 396*x^4 - 175*x^3                     +  6724;
c4 eq          x^10 - 2*x^9 +  5*x^8          - 41*x^6 + 202*x^5 - 117*x^4 + 600*x^3                     - 13448;
c5 eq        2*x^10 - 7*x^9 + 16*x^8 - 15*x^7          +  35*x^5 + 636*x^4 - 909*x^3 +  250*x^2;
c6 eq                        -11*x^8 + 22*x^7 - 14*x^6 -  82*x^5 + 205*x^4 - 500*x^3 - 2608*x^2 - 2500*x + 13448;
c7 eq       -2*x^10 + 4*x^9 - 10*x^8 -  7*x^7 + 14*x^6 -  70*x^5 - 586*x^4 - 175*x^3 - 1250*x^2 +  204*x -  6250;

for i in [1,3,5,7,2,4,6,8] do
    ci := R[l][i];
    q1, r1 := Quotrem(ci, x^6 - 2*x^5 + 5*x^4 + 328);
    q2, r2 := Quotrem(r1, x^2 - 2*x + 5);
    if r2 eq 0 then
	printf "c%o eq (x^6 - 2*x^5 + 5*x^4 + 328) * (%16o) + (x^2 - 2*x + 5) * (%o);\n", i-1, q1, q2;
    else
	printf "c%o eq (x^6 - 2*x^5 + 5*x^4 + 328) * (%16o) + (x^2 - 2*x + 5) * (%o) + %o;\n", i-1, q1, q2, r2;
    end if;
end for;

c0 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (   2*x^4 + 7*x) + (x^2 - 2*x + 5) * (35*x^3 + 1250);
c2 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (  -2*x^2 - 7*x) + (x^2 - 2*x + 5) * (375*x  - 1250);
c4 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (x^5 + 38 + 7*x) + (x^2 - 2*x + 5) * (         1250) - 5740;
c6 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (  -3*x^3 - 7*x) + (x^2 - 2*x + 5) * (50*x^2 - 1250);
c1 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (    4*x^3 - 41) + (x^2 - 2*x + 5) * (275*x^2);
c3 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (    -24*x + 41) + (x^2 - 2*x + 5) * (-625   );
c5 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (      x^4 - 41) + (x^2 - 2*x + 5) * (120*x^3);
c7 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (  -11*x^2 + 41) + (x^2 - 2*x + 5) * (-500*x );

//row 6
l := 6;
c0 := R[l][1]; c1 := R[l][2]; c2 := R[l][3]; c3 := R[l][4]; c4 := R[l][5]; c5 := R[l][6]; c6 := R[l][7]; c7 := R[l][8];
c0 eq        2*x^10 - 4*x^9 +  8*x^8 +  4*x^7 - 10*x^6 +  35*x^5 + 586*x^4 + 550*x^3 - 1406*x^2 + 1875*x;
c1 eq                 4*x^9 -  8*x^8 -  4*x^7 + 48*x^6 - 120*x^5 + 275*x^4 + 762*x^3 +  750*x^2 - 6622*x -  3125;
c2 eq x^11 - 4*x^10 + 9*x^9 - 10*x^8          + 38*x^6 + 217*x^5 - 396*x^4 - 175*x^3                     +  6724;
c3 eq          x^10 - 6*x^9 + 13*x^8 - 20*x^7          + 120*x^5 - 187*x^4 - 162*x^3 - 1375*x^2;
c4 eq        2*x^10 - 7*x^9 + 16*x^8 - 15*x^7          +  35*x^5 + 636*x^4 - 909*x^3 +  250*x^2;
c5 eq                 4*x^9 - 19*x^8 + 42*x^7 - 55*x^6           + 275*x^4 + 262*x^3 - 1233*x^2 - 2500*x;
c6 eq       -2*x^10 + 4*x^9 - 10*x^8 -  7*x^7 + 14*x^6 -  70*x^5 - 586*x^4 - 175*x^3 - 1250*x^2 +  204*x -  6250;
c7 eq                -4*x^9 +  8*x^8 - 20*x^7 + 41*x^6 -  82*x^5 -  70*x^4 - 762*x^3 - 1375*x^2          + 13448;

for i in [1,3,5,7,2,4,6,8] do
    ci := R[l][i];
    q1, r1 := Quotrem(ci, x^6 - 2*x^5 + 5*x^4 + 328);
    q2, r2 := Quotrem(r1, x^2 - 2*x + 5);
    if r2 eq 0 then
	printf "c%o eq (x^6 - 2*x^5 + 5*x^4 + 328) * (%16o) + (x^2 - 2*x + 5) * (%o);\n", i-1, q1, q2;
    else
	printf "c%o eq (x^6 - 2*x^5 + 5*x^4 + 328) * (%16o) + (x^2 - 2*x + 5) * (%o) + %o;\n", i-1, q1, q2, r2;
    end if;
end for;

c0 eq (x^6 - 2*x^5 + 5*x^4 + 328) * ( 2*x^4 - 2*x^2   ) + (x^2 - 2*x + 5) * ( 35*x^3 + 375*x );
c2 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (-2*x^4 + x^5 + 38) + (x^2 - 2*x + 5) * (-35*x^3         ) - 5740;
c4 eq (x^6 - 2*x^5 + 5*x^4 + 328) * ( 2*x^4 - 3*x^3   ) + (x^2 - 2*x + 5) * ( 35*x^3 + 50*x^2);
c6 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (-2*x^4 - 7*x     ) + (x^2 - 2*x + 5) * (-35*x^3 - 1250  );
c1 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (  4*x^3 - 24*x   ) + (x^2 - 2*x + 5) * ( 275*x^2 - 625    );
c3 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (- 4*x^3 + x^4    ) + (x^2 - 2*x + 5) * (-275*x^2 + 120*x^3);
c5 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (  4*x^3 - 11*x^2 ) + (x^2 - 2*x + 5) * ( 275*x^2 - 500*x  );
c7 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (- 4*x^3 + 41     ) + (x^2 - 2*x + 5) * (-275*x^2          );

//row 7
l := 7;
c0 := R[l][1]; c1 := R[l][2]; c2 := R[l][3]; c3 := R[l][4]; c4 := R[l][5]; c5 := R[l][6]; c6 := R[l][7]; c7 := R[l][8];
c0 eq                 4*x^9 -  8*x^8 -  4*x^7 + 48*x^6 - 120*x^5 + 275*x^4 +  762*x^3 +  750*x^2 - 6622*x -  3125;
c1 eq x^11 - 2*x^10 + 5*x^9 -  2*x^8 +  4*x^7 + 28*x^6 + 252*x^5 + 190*x^4 +  375*x^3 - 1406*x^2 + 1875*x +  6724;
c2 eq          x^10 - 6*x^9 + 13*x^8 - 20*x^7          + 120*x^5 - 187*x^4 -  162*x^3 - 1375*x^2;
c3 eq                -3*x^9 +  8*x^8 - 19*x^7 + 10*x^6           +  50*x^4 - 1459*x^3 + 1656*x^2 - 1875*x;
c4 eq                 4*x^9 - 19*x^8 + 42*x^7 - 55*x^6           + 275*x^4 +  262*x^3 - 1233*x^2 - 2500*x;
c5 eq                         -2*x^8 -  3*x^7 +  4*x^6 -  35*x^5           +  375*x^3 - 2656*x^2 + 2079*x -  6250;
c6 eq                -4*x^9 +  8*x^8 - 20*x^7 + 41*x^6 -  82*x^5 -  70*x^4 -  762*x^3 - 1375*x^2          + 13448;
c7 eq       -2*x^10 + 4*x^9 -  8*x^8 -  4*x^7 + 10*x^6 -  35*x^5 - 586*x^4 -  550*x^3 + 1406*x^2 - 1875*x;

for i in [1,3,5,7,2,4,6,8] do
    ci := R[l][i];
    q1, r1 := Quotrem(ci, x^6 - 2*x^5 + 5*x^4 + 328);
    q2, r2 := Quotrem(r1, x^2 - 2*x + 5);
    if r2 eq 0 then
	printf "c%o eq (x^6 - 2*x^5 + 5*x^4 + 328) * (%16o) + (x^2 - 2*x + 5) * (%o);\n", i-1, q1, q2;
    else
	printf "c%o eq (x^6 - 2*x^5 + 5*x^4 + 328) * (%16o) + (x^2 - 2*x + 5) * (%o) + %o;\n", i-1, q1, q2, r2;
    end if;
end for;

c0 eq (x^6 - 2*x^5 + 5*x^4 + 328) * ( 4*x^3 - 24*x    )    + (x^2 - 2*x + 5) * ( 275*x^2 - 625    );
c2 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (-4*x^3 + x^4     )    + (x^2 - 2*x + 5) * (-275*x^2 + 120*x^3);
c4 eq (x^6 - 2*x^5 + 5*x^4 + 328) * ( 4*x^3 - 11*x^2  )    + (x^2 - 2*x + 5) * ( 275*x^2 - 500*x  );
c6 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (-4*x^3 + 41      )    + (x^2 - 2*x + 5) * (-275*x^2          );
c1 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (-2*x^2 + x^5 + 38)    + (x^2 - 2*x + 5) * ( 375*x            ) - 5740;
c3 eq (x^6 - 2*x^5 + 5*x^4 + 328) * ( 2*x^2 - 3*x^3   )    + (x^2 - 2*x + 5) * (-375*x + 50*x^2   );
c5 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (-2*x^2 - 7*x     )    + (x^2 - 2*x + 5) * ( 375*x - 1250     );
c7 eq (x^6 - 2*x^5 + 5*x^4 + 328) * ( 2*x^2 - 2*x^4   )    + (x^2 - 2*x + 5) * (-375*x - 35*x^3   );

//row 8
l := 8;
c0 := R[l][1]; c1 := R[l][2]; c2 := R[l][3]; c3 := R[l][4]; c4 := R[l][5]; c5 := R[l][6]; c6 := R[l][7]; c7 := R[l][8];
c0 eq x^11 - 2*x^10 + 5*x^9 -  2*x^8 +  4*x^7 +  28*x^6 + 252*x^5 + 190*x^4 +  375*x^3 - 1406*x^2 + 1875*x +  6724;
c1 eq          x^10 - 2*x^9 +  5*x^8 - 24*x^7 +  48*x^6           +  88*x^4 +  600*x^3 -  625*x^2 - 6622*x -  3125;
c2 eq                -3*x^9 +  8*x^8 - 19*x^7 +  10*x^6           +  50*x^4 - 1459*x^3 + 1656*x^2 - 1875*x;
c3 eq                       - 11*x^8 + 46*x^7 - 103*x^6 + 120*x^5           -  500*x^3 - 1983*x^2 + 4122*x +  3125;
c4 eq                         -2*x^8 -  3*x^7 +   4*x^6 -  35*x^5           +  375*x^3 - 2656*x^2 + 2079*x -  6250;
c5 eq                                - 24*x^7 +  89*x^6 - 202*x^5 + 205*x^4            -  625*x^2 - 6622*x + 10323;
c6 eq       -2*x^10 + 4*x^9 -  8*x^8 -  4*x^7 +  10*x^6 -  35*x^5 - 586*x^4 -  550*x^3 + 1406*x^2 - 1875*x;
c7 eq                -4*x^9 +  8*x^8 +  4*x^7 -  48*x^6 + 120*x^5 - 275*x^4 -  762*x^3 -  750*x^2 + 6622*x +  3125;

for i in [1,3,5,7,2,4,6,8] do
    ci := R[l][i];
    q1, r1 := Quotrem(ci, x^6 - 2*x^5 + 5*x^4 + 328);
    q2, r2 := Quotrem(r1, x^2 - 2*x + 5);
    if r2 eq 0 then
	printf "c%o eq (x^6 - 2*x^5 + 5*x^4 + 328) * (%16o) + (x^2 - 2*x + 5) * (%o);\n", i-1, q1, q2;
    else
	printf "c%o eq (x^6 - 2*x^5 + 5*x^4 + 328) * (%16o) + (x^2 - 2*x + 5) * (%o) + %o;\n", i-1, q1, q2, r2;
    end if;
end for;

c0 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (   x^5 - 2*x^2 + 38 ) + (x^2 - 2*x + 5) * (           375*x) + -5740;
c2 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (-3*x^3 + 2*x^2      ) + (x^2 - 2*x + 5) * (  50*x^2 - 375*x);
c4 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (       - 2*x^2 - 7*x) + (x^2 - 2*x + 5) * (   -1250 + 375*x);
c6 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (-2*x^4 + 2*x^2      ) + (x^2 - 2*x + 5) * ( -35*x^3 - 375*x);
c1 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (    x^4 - 24*x      ) + (x^2 - 2*x + 5) * ( 120*x^3 - 625);
c3 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (-11*x^2 + 24*x      ) + (x^2 - 2*x + 5) * (-500*x   + 625);
c5 eq (x^6 - 2*x^5 + 5*x^4 + 328) * (         -24*x + 41 ) + (x^2 - 2*x + 5) * (         - 625);
c7 eq (x^6 - 2*x^5 + 5*x^4 + 328) * ( -4*x^3 + 24*x      ) + (x^2 - 2*x + 5) * (-275*x^2 + 625);

ee := (c0 + c1*qx + c2*qx^2 + c3*qx^3 + c4*qx^4 + c5*qx^5 + c6*qx^6 + c7*qx^7);
qx8 := qx^6 - qx^4 + qx^2 - 1;
ee eq (x^6 - 2*x^5 + 5*x^4 + 328) * (x^5 + x^4*qx - 2*x^4*qx^6 - 3*x^3*qx^2 - 4*x^3*qx^7 - 11*x^2*qx^3 + 2*x^2*qx8 - 7*x*qx^4 + 24*x*qx8*qx + 38 + 41*qx^5) \
+ (x^2 - 2*x + 5) * (50*x^2*qx^2 - 275*x^2*qx^7 - 35*x^3*qx^6 + 120*x^3*qx - 500*x*qx^3 - 375*x*qx8 - 1250*qx^4 + 625*qx8*qx) - 5740;

ee eq (x^6 - 2*x^5 + 5*x^4 + 328) * (x^5 + x^4*qx*(1 - 2*qx^5) - x^3*qx^2*(3 + 4*qx^5) + x^2*(-11*qx^3 + 2*qx8) + x*(-7*qx^4 + 24*qx8*qx) + 38 + 41*qx^5) \
+ (x^2 - 2*x + 5) * (25*x^2*qx^2*(2 - 11*qx^5) + 5*x^3*qx*(-7*qx^5 + 24) - 125*x*(4*qx^3 + 3*qx8) - 625*(2*qx^4 - qx8*qx)) - 5740;

ee1 := (x^6 - 2*x^5 + 5*x^4 + 328) * (x^5 + x^4*qx*(1 - 2*qx^5) - x^3*qx^2*(3 + 4*qx^5) + x^2*qx^3*(-11 + 2*qx^5) + x*qx^4*(-7 + 24*qx^5) + 38 + 41*qx^5) \
     + (x^2 - 2*x + 5)             * (25*x^2*qx^2*(2 - 11*qx^5) + 5*x^3*qx*(24 - 7*qx^5) - 125*x*qx^3*(4 + 3*qx^5) + 625*qx^4*(qx^5 - 2)) - 5740;
5740 eq 4*5*7*41;
// it seems it will not save anything

/*
cc := R[5][3];
Quotrem(R[5][1], cc);
Quotrem(R[5][2], cc);
Quotrem(R[5][4], cc);
Quotrem(R[5][5], cc);
Quotrem(R[5][6], cc);
Quotrem(R[5][7], cc);
Quotrem(R[5][8], cc);

*/
